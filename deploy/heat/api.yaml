heat_template_version: queens
description: A load-balanced REST API server
parameters:
  image:
    type: string
    description: Image used for servers
  key:
    type: string
    description: SSH key to connect to the servers
  flavor:
    type: string
    description: flavor used by the servers
  #pool_id:
  #  type: string
  #  description: Pool to contact
  db_password:
    type: string
  db_user:
    type: string
  db_hosts:
    type: json
  metadata:
    type: json
  subnet:
    type: string
    description: Subnet used by the server

resources:
  config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:
        str_replace:
          template: |
            #!/bin/sh -ex
            git clone https://github.com/pshchelo/refwebapp /opt/refwebapp
            cd /opt/refwebapp
            ./deploy/deps.sh
            make bootstrap
            make install
            # call wait condition here <-
            make serve
          params:
            $db_hosts: { get_param: db_hosts }
            $db_password: { get_param: db_password }
            $db_user: { get_param: db_user }
  server:
    type: OS::Nova::Server
    properties:
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key}
      metadata: {get_param: metadata}
      user_data: {get_resource: config}
      user_data_format: RAW
      networks:
      - subnet: { get_param: subnet }
  #member:
  #  type: OS::Octavia::PoolMember
  #  properties:
  #    pool: {get_param: pool_id}
  #    address: {get_attr: [server, first_address]}
  #    protocol_port: 80
  #    subnet: {get_param: subnet}

outputs:
  server_ip:
    description: IP Address of the load-balanced server.
    value: { get_attr: [server, first_address] }
  #lb_member:
  #  description: LB member details.
  #  value: { get_attr: [member, show] }

